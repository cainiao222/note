* 2017/05
** 2017/05/04
*** 我一般习惯于抽函数，将所有的重复代码都抽出来，这本没有错，但不能乱抽。如果抽的不合理，那么抽出的函数与函数之间就会出现过度耦合的情况，你修改了一个函数，另一个地方也使用到了这个函数，也意外的被修改了。应该抽跟业务逻辑没有关系的函数并形成一个函数库，实际上也就是函数式编程里的那些函数。
*** 关于async与await,它的原理实际上是当碰到await函数调用的时候，将这个调用以及前面的调用代码暂存到promise等待队列里面，然后当队列前面的函数返回的时候，将resolve的值给到函数的返回值继续往下执行，它将一个函数分成了好几段，然后一段一段执行，直到结束。它实际上只是promise的语法糖而已，但是它能极大简化promise，使得我们能够更轻易的写出更加复杂的逻辑。
*** async与await的最大意义是使得异步代码能够更好的与同步代码配合着去写代码，我们再也不需要一碰到异步就将这段异步代码单独放到一个函数中去处理，或者为了这个异步写一大堆无意义的重复代码，比如then()，比如catch()等。
*** TIPS 豆瓣开发API是测试异步接口的一套非常好的API接口，而且具有一定的实用性，可以用来写写爬虫之类的。
